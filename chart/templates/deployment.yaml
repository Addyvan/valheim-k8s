apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        name: {{ .Release.Name }}
        env:
        - name: SERVER_NAME
          value: {{ .Values.serverName }}
        - name: WORLD_NAME
          value: {{ .Values.worldName }}
        {{ if .Values.passwordSecret -}}
        - name: SERVER_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.passwordSecret }}
              key: password
              optional: false
        {{ else if .Values.password -}}
        - name: SERVER_PASS
          value: {{ .Values.password }}
        {{ else -}}
        - name: SERVER_PASS
          value: {{ .Release.Name }}
        {{end -}}
        - name: SERVER_PORT
          value: {{ .Values.networking.gamePort | quote }}
        {{ if .Values.extraEnvironmentVars -}}
        {{ range $key, $value := .Values.extraEnvironmentVars }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{ end -}}
        {{ end -}}
        ports:
        - containerPort: {{ .Values.networking.gamePort | int }}
          name: gameport
        - containerPort: {{ .Values.networking.gamePort | int | add 1 }}
          name: queryport
        volumeMounts:
        {{ if .Values.storage.kind }}
        - mountPath: /config
          name: gamefiles
        {{ end }}
        {{ if .Values.serverStorage.kind }}
        - mountPath: /opt/valheim
          name: serverfiles
        {{ end }}
        {{ range .Values.extraVolumes }}
        - name: {{ .name }}
          readOnly: true
          mountPath: /extraVolumes/{{ .name }}
        {{ end }}
        resources: {{- toYaml .Values.resources | nindent 10 }}
      volumes:
      {{ if eq .Values.storage.kind "hostvol" }}
      - name: gamefiles
        hostPath:
          path: {{ .Values.storage.hostvol.path }}
          type: DirectoryOrCreate
      {{ end }}
      {{ if eq .Values.serverStorage.kind "hostvol" }}
      - name: serverfiles
        hostPath:
          path: {{ .Values.serverStorage.hostvol.path }}
          type: DirectoryOrCreate
      {{ end }}
      {{ if eq .Values.storage.kind "persistentVolumeClaim" }}
      - name: gamefiles
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-world-data
      {{ end }}
      {{ if eq .Values.serverStorage.kind "persistentVolumeClaim" }}
      - name: serverfiles
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-server-base-data
      {{ end }}
      {{ range .Values.extraVolumes }}
      - name: {{ .name }}
        {{ .type }}:
          {{ if (eq .type "configMap") }}
          name: {{ .name }}
          {{ else if (eq .type "secret") }}
          secretName: {{ .name }}
          {{ if .defaultMode }}
          defaultMode: {{ .defaultMode }}
          {{ end }}
          {{ end }}
      {{ end }}
      {{ if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{ end }}
