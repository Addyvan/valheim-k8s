worldName: example-world-name
serverName: example-server-name
password: password

resources: {}

image:
  repository: lloesche/valheim-server
  tag: latest

storage:
  kind: hostvol
  hostvol:
    path: /data/valheim
  pvc:
    size: 1Gi

serverStorage:
  kind: hostvol
  hostvol:
    path: /data/valheim-server
  pvc:
    size: 5Gi

networking:
  serviceType: LoadBalancer
  gamePort: 2456
  publishQueryPort: "true"
  nodePort: 30373

nodeSelector: {}

tolerations: {}

# If you utilize priority classes, you can define the priority class for this deployment here
# priorityClassName: my-priority-class-name

# resources:
#   requests:
#     memory: "4Gi"
#     cpu: "2000m"

# extraEnvironmentVars:
#   BACKUPS: true
#   BACKUPS_CRON: "0 * * * *"
#   BACKUPS_MAX_AGE: 3
#   POST_BACKUP_HOOK: "timeout 300 scp -i /extraVolumes/backup-ssh-key/ssh-privatekey -o StrictHostKeyChecking=no @BACKUP_FILE@ myself@example.com:~/valheim_backups/$(basename @BACKUP_FILE@)"

# extraVolumes:
# - type: secret
#   name: backup-ssh-key
#   defaultMode: 0600

# If you want addtional LoadBalancer control, something like this (metalLB example) can be used:
# networking:
#   serviceType: LoadBalancer
#   gamePort: 2456
#   publishQueryPort: "true"
#   loadBalancerIP: 192.168.100.100
#   serviceAnnotations:
#     metallb.universe.tf/address-pool: valheim-server
#   externalTrafficPolicy: Local
